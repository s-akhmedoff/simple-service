definitions:
  config.Config:
    properties:
      environment:
        type: string
      httphost:
        type: string
      httpport:
        type: string
      postgresDatabase:
        type: string
      postgresHost:
        type: string
      postgresPassword:
        type: string
      postgresPort:
        type: string
      postgresUser:
        type: string
    type: object
  rest.createProductParams:
    properties:
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      product_type:
        type: string
      ski:
        type: string
      uri:
        type: string
    required:
    - description
    - is_active
    - name
    - product_type
    - ski
    - uri
    type: object
  views.R:
    properties:
      data:
        type: object
      error_code:
        example: 0
        type: integer
      error_note:
        example: Error Note
        type: string
      status:
        example: Success | Failure
        type: string
    type: object
host: localhost:7070
info:
  contact:
    email: sodikjon.akhmedoff@gmail.com
    name: s-akhmedoff
    url: https://github.com/s-akhmedoff
  description: This is a sample server
  license:
    name: GNU GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  title: Simple Service REST API
  version: "1.0"
paths:
  /config:
    get:
      description: expose all configs for debugging
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            environment:
              description: Current environment
              type: string
            go-os:
              description: Go OS
              type: string
            go-version:
              description: Version of Golang
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/views.R'
            - properties:
                data:
                  $ref: '#/definitions/config.Config'
              type: object
        "405":
          description: Method Not Allowed
          headers:
            environment:
              description: Current environment
              type: string
            go-os:
              description: Go OS
              type: string
            go-version:
              description: Version of Golang
              type: string
          schema:
            $ref: '#/definitions/views.R'
      summary: Show config
  /products:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.R'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/views.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/views.R'
      summary: Get all products
    post:
      consumes:
      - application/json
      description: create new product in storage
      parameters:
      - description: product params
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/rest.createProductParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.R'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/views.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/views.R'
      summary: Create new product
    put:
      consumes:
      - application/json
      description: create new product in storage
      parameters:
      - description: product params
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/rest.createProductParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.R'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/views.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/views.R'
      summary: Create new product
  /products/{id}:
    delete:
      parameters:
      - description: product's ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.R'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/views.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/views.R'
      summary: Delete product
  /products/{ski}:
    get:
      description: get product by its ski
      parameters:
      - description: product's ski
        in: path
        name: ski
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/views.R'
      summary: Read Product By SKI
  /products/{type}:
    post:
      description: get product by its type
      parameters:
      - description: product's type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/views.R'
      summary: Read product by type
swagger: "2.0"
